{
    "cliDescription": "run ISV Hammer",
    "cliLongDescription": "Runs ISV Hammer for the specified package version and subscriber orgs.",
    "help": "Use this command to run ISV Hammer for the specified package versions and subscriber orgs.\nIf Salesforce has enabled Multiple Managed Packages for your org, you can test more than one package version. Supply the IDs of the package versions you want to test in the desired order of execution.\nThe command creates a copy of each of the supplied subscriber orgs and tests the package upgrade in each of them.\nIf a scheduled date/time is supplied, validation and setup start immediately but the package upgrade test will not start until after the supplied date/time. Format the --scheduledrundatetime value as YYYY-MM-DD HH:mm:ss in the GMT timezone. This date cannot be more than 25 days from today.\nTo test against the Salesforce preview release version, during the sandbox preview window, include --preview and a --scheduledrundatetime value that’s immediately after a staggered release, based on the Salesforce release calendar.\nTo run the package version’s Apex tests in each subscriber org after successfully testing the package upgrade, include --apextests.\nThe command returns a request ID (starts with 0TW). Use this IsvHammerRequest ID to query for the test status by running \"sfdx force:package:hammertest:report -i 0TW...\".\n\nExamples:\n   $ sfdx force:package:hammertest:run -u you@yourpackagingorg.com -i 04t...a,04t...b -s 00D...a,00Dx...b\n   $ sfdx force:package:hammertest:run -u you@yourpackagingorg.com -i 04t... -f subscriberOrgs.txt",
    "packageversionids": "comma-separated list of package version IDs to test",
    "packageversionidsLong": "A comma-separated list of one or more package version IDs to upgrade or install (each starts with 04t). You can include more than one package version ID only if Salesforce has enabled Multiple Managed Packages for your org. The order of the list specifies the order of the upgrades or installations.",
    "subscriberorgs": "comma-separated list of subscriber org IDs",
    "subscriberorgsLong": "A comma-separated list of one or more subscriber org IDs (each starts with 00D) to run the hammer test on. Either -s or -f is required.",
    "subscriberfile": "file with list of subscriber orgs IDs, one per line",
    "subscriberfileLong": "The path to a file containing a list of subscriber orgs IDs (each starts with 00D), one per line, to run the hammer test on. Either -s or -f required.",
    "scheduledrundatetime": "earliest date/time to run the package upgrade test (YYYY-MM-DD HH:mm:ss, in GMT)",
    "scheduledrundatetimeLong": "The earliest date and time when the package upgrade test can run (in GMT, in the YYYY-MM-DD HH:mm:ss format).",
    "preview": "run the package hammer test in the Salesforce preview version",
    "previewLong": "Runs the package ISV Hammer test in the upcoming Salesforce preview version.\nIf you include this flag, include a --scheduledrundatetime value that’s immediately after a staggered release, based on the Salesforce release calendar.",
    "apextests": "after package upgrade validation, run the package's Apex tests in the subscriber org",
    "apextestsLong": "After successfully testing the package upgrade, runs the Apex tests in the package version in each subscriber org.",
    "errorSubscriberRequiredFlags": "Include either a --subscriberorgs (-s) value or a --subscriberfile (-f) value.",
    "noSubscriberOrgIds": "No valid subscriber org IDs found.",
    "errorPreviewDependencyFlags": "If you include --preview (-p), also supply a --scheduledrundatetime (-d) value.",
    "humanSuccess": "Successfully created an ISV Hammer request.",
    "humanFailure": "The ISV Hammer request creation failed.",
    "apextestInterface": "after package upgrade validation, run the Apex tests in the subscriber org that implement this interface",
    "apextestinterfaceLong": "After package upgrade validation, runs the Apex tests in the subscriber org that implement an interface exposed from a managed package.  The parameter value for interface name must be fully qualified."
}
