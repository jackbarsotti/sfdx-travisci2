"use strict";
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
// This is the legacy converted command file. Ignoring code-coverage since this is generated.
// THIS SHOULD BE REMOVED WHEN CONVERTED TO EXTEND SfdxCommand
/* istanbul ignore file */
const command_1 = require("@salesforce/command");
const core_1 = require("@salesforce/core");
const ToolbeltCommand_1 = require("../../../../ToolbeltCommand");
core_1.Messages.importMessagesDirectory(__dirname);
const messages = core_1.Messages.loadMessages('salesforce-alm', 'package_hammertest_report');
class PackageHammertestReportCommand extends ToolbeltCommand_1.ToolbeltCommand {
    async run() {
        const context = await this.resolveLegacyContext();
        const HammerTestReportCommand = require('../../../../lib/package/hammerTestReportCommand');
        return this.execLegacyCommand(new HammerTestReportCommand(), context);
    }
}
exports.PackageHammertestReportCommand = PackageHammertestReportCommand;
PackageHammertestReportCommand.theDescription = messages.getMessage('cliDescription');
PackageHammertestReportCommand.longDescription = messages.getMessage('cliLongDescription');
PackageHammertestReportCommand.help = messages.getMessage('help');
PackageHammertestReportCommand.requiresUsername = true;
PackageHammertestReportCommand.requiresProject = true;
PackageHammertestReportCommand.flagsConfig = {
    requestid: command_1.flags.id({
        char: 'i',
        description: messages.getMessage('requestid'),
        longDescription: messages.getMessage('requestidLong'),
        required: true
    }),
    summary: command_1.flags.boolean({
        char: 's',
        description: messages.getMessage('summary'),
        longDescription: messages.getMessage('summaryLong'),
        required: false
    })
};

//# sourceMappingURL=report.js.map
