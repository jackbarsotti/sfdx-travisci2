"use strict";
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
// This is the legacy converted command file. Ignoring code-coverage since this is generated.
// THIS SHOULD BE REMOVED WHEN CONVERTED TO EXTEND SfdxCommand
/* istanbul ignore file */
const command_1 = require("@salesforce/command");
const Messages = require("../../../lib/messages");
const ToolbeltCommand_1 = require("../../../ToolbeltCommand");
const messages = Messages();
class ConfigGetCommand extends ToolbeltCommand_1.ToolbeltCommand {
    async run() {
        const context = await this.resolveLegacyContext();
        const ConfigGetCommand = require('../../../lib/config/ConfigGetCommand');
        return this.execLegacyCommand(new ConfigGetCommand(), context);
    }
}
exports.ConfigGetCommand = ConfigGetCommand;
ConfigGetCommand.theDescription = messages.getMessage('description', [], 'configGetCommand');
ConfigGetCommand.longDescription = messages.getMessage('descriptionLong', [], 'configGetCommand');
ConfigGetCommand.help = messages.getMessage('help', [], 'configGetCommand');
ConfigGetCommand.requiresProject = false;
ConfigGetCommand.strict = false;
ConfigGetCommand.flagsConfig = {
    verbose: command_1.flags.builtin()
};

//# sourceMappingURL=get.js.map
