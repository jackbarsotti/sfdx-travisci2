"use strict";
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
// This is the legacy converted command file. Ignoring code-coverage since this is generated.
// THIS SHOULD BE REMOVED WHEN CONVERTED TO EXTEND SfdxCommand
/* istanbul ignore file */
const command_1 = require("@salesforce/command");
const Messages = require("../../../lib/force-cli/force-cli-messages");
const ToolbeltCommand_1 = require("../../../ToolbeltCommand");
class SourceOpenCommand extends ToolbeltCommand_1.ToolbeltCommand {
    async run() {
        const context = await this.resolveLegacyContext();
        const { SourceOpenCommand } = require('../../../lib/source/sourceOpenCommand');
        return await this.execLegacyCommand(new SourceOpenCommand(), context);
    }
}
exports.SourceOpenCommand = SourceOpenCommand;
SourceOpenCommand.theDescription = Messages.get('SourceOpenDescription');
SourceOpenCommand.longDescription = Messages.get('SourceOpenLongDescription');
SourceOpenCommand.help = Messages.get('SourceOpenHelp');
SourceOpenCommand.requiresProject = true;
SourceOpenCommand.flagsConfig = {
    sourcefile: command_1.flags.filepath({
        char: 'f',
        required: true,
        hidden: false,
        description: Messages.get('SourceOpenFileDescription'),
        longDescription: Messages.get('SourceOpenFileLongDescription')
    }),
    urlonly: command_1.flags.boolean({
        char: 'r',
        required: false,
        hidden: false,
        description: Messages.get('SourceOpenPathDescription'),
        longDescription: Messages.get('SourceOpenPathLongDescription')
    })
};
SourceOpenCommand.requiresUsername = true;

//# sourceMappingURL=open.js.map
