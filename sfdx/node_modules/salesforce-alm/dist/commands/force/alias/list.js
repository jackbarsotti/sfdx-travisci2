"use strict";
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
// This is the legacy converted command file. Ignoring code-coverage since this is generated.
// THIS SHOULD BE REMOVED WHEN CONVERTED TO EXTEND SfdxCommand
/* istanbul ignore file */
const Alias = require("../../../lib/core/alias");
const logger = require("../../../lib/core/logApi");
const Messages = require("../../../lib/messages");
const ToolbeltCommand_1 = require("../../../ToolbeltCommand");
const messages = Messages();
class AliasListCommand extends ToolbeltCommand_1.ToolbeltCommand {
    async run() {
        const _ = require('lodash');
        const context = await this.resolveLegacyContext();
        return this.execLegacyCommand({
            execute: execContext => Alias.list(execContext.flags.group).then(aliases => {
                logger.styledHeader(logger.color.blue('Alias List'));
                return _.map(aliases, (value, alias) => ({ alias, value }));
            }),
            getColumnData: () => [
                { key: 'alias', label: 'Alias' },
                { key: 'value', label: 'Value' }
            ]
        }, context);
    }
}
exports.AliasListCommand = AliasListCommand;
AliasListCommand.theDescription = messages.getMessage('description', [], 'aliasListCommand');
AliasListCommand.longDescription = messages.getMessage('longDescription', [], 'aliasListCommand');
AliasListCommand.help = messages.getMessage('help', [], 'aliasListCommand');
AliasListCommand.requiresProject = false;

//# sourceMappingURL=list.js.map
