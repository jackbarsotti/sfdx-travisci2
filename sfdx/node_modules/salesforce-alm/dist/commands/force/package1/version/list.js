"use strict";
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
// This is the legacy converted command file. Ignoring code-coverage since this is generated.
// THIS SHOULD BE REMOVED WHEN CONVERTED TO EXTEND SfdxCommand
/* istanbul ignore file */
const command_1 = require("@salesforce/command");
const Messages = require("../../../../lib/messages");
const ToolbeltCommand_1 = require("../../../../ToolbeltCommand");
const messages = Messages();
class Package1VersionListCommand extends ToolbeltCommand_1.ToolbeltCommand {
    async run() {
        const context = await this.resolveLegacyContext();
        const Package1VersionListCommand = require('../../../../lib/package1/package1VersionListCommand');
        return this.execLegacyCommand(new Package1VersionListCommand(context.org), context);
    }
}
exports.Package1VersionListCommand = Package1VersionListCommand;
Package1VersionListCommand.theDescription = messages.getMessage('package1VersionListCommandCliDescription');
Package1VersionListCommand.longDescription = messages.getMessage('package1VersionListCommandLongDescription');
Package1VersionListCommand.help = messages.getMessage('package1VersionListCommandCliHelp');
Package1VersionListCommand.supportsUsername = true;
Package1VersionListCommand.requiresProject = true;
Package1VersionListCommand.flagsConfig = {
    packageid: command_1.flags.id({
        char: 'i',
        description: messages.getMessage('package1VersionListCommandPackageId'),
        longDescription: messages.getMessage('package1VersionListCommandPackageIdLong'),
        required: false
    })
};

//# sourceMappingURL=list.js.map
