"use strict";
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
// This is the legacy converted command file. Ignoring code-coverage since this is generated.
// THIS SHOULD BE REMOVED WHEN CONVERTED TO EXTEND SfdxCommand
/* istanbul ignore file */
const command_1 = require("@salesforce/command");
const Messages = require("../../../../lib/messages");
const ToolbeltCommand_1 = require("../../../../ToolbeltCommand");
const messages = Messages();
class OrgShapeDeleteCommand extends ToolbeltCommand_1.ToolbeltCommand {
    async run() {
        const context = await this.resolveLegacyContext();
        const heroku = require('heroku-cli-util');
        const OrgShapeDeleteCommand = require('../../../../lib/org/orgShapeDeleteCommand');
        const orgShapeDeleteCommand = new OrgShapeDeleteCommand();
        // don't prompt yes/no if we're forcing the delete request, just execute
        if (context.flags.noprompt) {
            return this.execLegacyCommand(orgShapeDeleteCommand, context);
        }
        else {
            return heroku
                .prompt(messages.getMessage('deleteCommandYesNo', this.org.getUsername(), 'org_shape_delete'))
                .then(answer => {
                if (answer.toUpperCase() === 'YES' || answer.toUpperCase() === 'Y') {
                    return this.execLegacyCommand(orgShapeDeleteCommand, context);
                }
                return undefined;
            });
        }
    }
}
exports.OrgShapeDeleteCommand = OrgShapeDeleteCommand;
OrgShapeDeleteCommand.theDescription = messages.getMessage('description', [], 'org_shape_delete');
OrgShapeDeleteCommand.longDescription = messages.getMessage('longDescription', [], 'org_shape_delete');
OrgShapeDeleteCommand.help = messages.getMessage('help', [], 'org_shape_delete');
OrgShapeDeleteCommand.requiresProject = false;
OrgShapeDeleteCommand.requiresUsername = true;
OrgShapeDeleteCommand.flagsConfig = {
    noprompt: command_1.flags.boolean({
        char: 'p',
        description: messages.getMessage('noPrompt', [], 'org_shape_delete'),
        longDescription: messages.getMessage('noPromptLong', [], 'org_shape_delete'),
        required: false
    })
};

//# sourceMappingURL=delete.js.map
