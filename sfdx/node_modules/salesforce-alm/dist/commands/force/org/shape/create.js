"use strict";
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
// This is the legacy converted command file. Ignoring code-coverage since this is generated.
// THIS SHOULD BE REMOVED WHEN CONVERTED TO EXTEND SfdxCommand
/* istanbul ignore file */
const command_1 = require("@salesforce/command");
const Messages = require("../../../../lib/messages");
const ToolbeltCommand_1 = require("../../../../ToolbeltCommand");
const messages = Messages();
const commandTimeOutInMS = 30e3;
class OrgShapeCreateCommand extends ToolbeltCommand_1.ToolbeltCommand {
    async run() {
        const context = await this.resolveLegacyContext();
        const ShapeRepCreateCommand = require('../../../../lib/org/shapeRepCreateCommand');
        const createCommand = new ShapeRepCreateCommand();
        let timeoutID;
        const timeout = new Promise((_, reject) => {
            timeoutID = setTimeout(() => { reject(messages.getMessage('shapeCreateFailedMessage')); }, commandTimeOutInMS);
        });
        return Promise.race([
            this.execLegacyCommand(createCommand, context),
            timeout
        ]).then(result => { clearTimeout(timeoutID); return result; });
    }
}
exports.OrgShapeCreateCommand = OrgShapeCreateCommand;
OrgShapeCreateCommand.theDescription = messages.getMessage('create_shape_command_description', null, 'org_shape');
OrgShapeCreateCommand.longDescription = messages.getMessage('create_shape_command_description_long', null, 'org_shape');
OrgShapeCreateCommand.help = messages.getMessage('create_shape_command_help', null, 'org_shape');
OrgShapeCreateCommand.requiresProject = false;
OrgShapeCreateCommand.requiresUsername = true;
OrgShapeCreateCommand.flagsConfig = {
    definitionfile: command_1.flags.string({
        char: 'f',
        description: messages.getMessage('create_shape_command_definitionfile', null, 'org_shape'),
        longDescription: messages.getMessage('create_shape_command_definitionfile_long', null, 'org_shape'),
        required: false
    })
};

//# sourceMappingURL=create.js.map
