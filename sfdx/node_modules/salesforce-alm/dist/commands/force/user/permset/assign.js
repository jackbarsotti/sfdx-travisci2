"use strict";
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
// This is the legacy converted command file. Ignoring code-coverage since this is generated.
// THIS SHOULD BE REMOVED WHEN CONVERTED TO EXTEND SfdxCommand
/* istanbul ignore file */
const command_1 = require("@salesforce/command");
const messages = require("../../../../lib/messages");
const ToolbeltCommand_1 = require("../../../../ToolbeltCommand");
const { getMessage } = messages();
class UserPermsetAssignCommand extends ToolbeltCommand_1.ToolbeltCommand {
    async run() {
        const context = await this.resolveLegacyContext();
        const { UserPermsetAssignCommand } = require('../../../../lib/user/userPermsetAssignCommand');
        return await this.execLegacyCommand(new UserPermsetAssignCommand(), context);
    }
}
exports.UserPermsetAssignCommand = UserPermsetAssignCommand;
UserPermsetAssignCommand.theDescription = getMessage('assignCommandCliDescription');
UserPermsetAssignCommand.longDescription = getMessage('assignCommandCliDescriptionLong');
UserPermsetAssignCommand.help = getMessage('assignCommandCliHelp');
UserPermsetAssignCommand.requiresProject = false;
UserPermsetAssignCommand.requiresUsername = true;
UserPermsetAssignCommand.flagsConfig = {
    permsetname: command_1.flags.string({
        char: 'n',
        description: getMessage('assignCommandCliName'),
        longDescription: getMessage('assignCommandCliNameLong'),
        required: true
    }),
    onbehalfof: command_1.flags.array({
        char: 'o',
        description: getMessage('assignCommandOnBehalfOf'),
        longDescription: getMessage('assignCommandOnBehalfOfLong'),
        required: false
    })
};

//# sourceMappingURL=assign.js.map
