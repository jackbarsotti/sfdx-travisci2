"use strict";
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
// This is the legacy converted command file. Ignoring code-coverage since this is generated.
// THIS SHOULD BE REMOVED WHEN CONVERTED TO EXTEND SfdxCommand
/* istanbul ignore file */
const command_1 = require("@salesforce/command");
const messages = require("../../../../lib/messages");
const ToolbeltCommand_1 = require("../../../../ToolbeltCommand");
const { getMessage } = messages();
class UserPasswordGenerateCommand extends ToolbeltCommand_1.ToolbeltCommand {
    async run() {
        const context = await this.resolveLegacyContext();
        const { UserPasswordGenerateCommand } = require('../../../../lib/user/userPasswordGenerateCommand');
        return await this.execLegacyCommand(new UserPasswordGenerateCommand(), context);
    }
}
exports.UserPasswordGenerateCommand = UserPasswordGenerateCommand;
UserPasswordGenerateCommand.theDescription = getMessage('description', [], 'generatePassword');
UserPasswordGenerateCommand.longDescription = getMessage('longDescription', [], 'generatePassword');
UserPasswordGenerateCommand.help = getMessage('help', [], 'generatePassword');
UserPasswordGenerateCommand.requiresProject = false;
UserPasswordGenerateCommand.requiresUsername = true;
UserPasswordGenerateCommand.requiresDevhubUsername = true;
UserPasswordGenerateCommand.flagsConfig = {
    onbehalfof: command_1.flags.array({
        char: 'o',
        description: getMessage('onbehalfofParam', [], 'generatePassword'),
        longDescription: getMessage('onbehalfofParamLong', [], 'generatePassword'),
        required: false
    })
};

//# sourceMappingURL=generate.js.map
