"use strict";
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("@salesforce/command");
const CommunityTemplatesResource_1 = require("../../../../lib/community/connect/CommunityTemplatesResource");
const ConnectExecutor_1 = require("../../../../lib/connect/services/ConnectExecutor");
const core_1 = require("@salesforce/core");
core_1.Messages.importMessagesDirectory(__dirname);
const community = core_1.Messages.loadMessages('salesforce-alm', 'community_commands');
/**
 * A command to fetch available community templates a community. This is just an sfdx wrapper around
 * the get available community templates connect endpoint
 */
class CommunityListTemplatesCommand extends command_1.SfdxCommand {
    async run() {
        const listTemplateCommand = new CommunityTemplatesResource_1.CommunityTemplatesResource(this.ux);
        return new ConnectExecutor_1.ConnectExecutor(listTemplateCommand, this.org).callConnectApi();
    }
}
exports.CommunityListTemplatesCommand = CommunityListTemplatesCommand;
CommunityListTemplatesCommand.requiresUsername = true;
CommunityListTemplatesCommand.help = community.getMessage('list.help');
CommunityListTemplatesCommand.description = community.getMessage('list.description') + '\n\n' + CommunityListTemplatesCommand.help;
CommunityListTemplatesCommand.longDescription = community.getMessage('list.longDescription');

//# sourceMappingURL=list.js.map
