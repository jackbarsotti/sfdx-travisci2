"use strict";
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
// This is the legacy converted command file. Ignoring code-coverage since this is generated.
// THIS SHOULD BE REMOVED WHEN CONVERTED TO EXTEND SfdxCommand
/* istanbul ignore file */
const command_1 = require("@salesforce/command");
const Messages = require("../../../../lib/force-cli/force-cli-messages");
const ToolbeltCommand_1 = require("../../../../ToolbeltCommand");
class DataBulkDeleteCommand extends ToolbeltCommand_1.ToolbeltCommand {
    async run() {
        const context = await this.resolveLegacyContext();
        const { DataBulkDeleteCommand } = require('../../../../lib/data/dataBulkDeleteCommand');
        return await this.execLegacyCommand(new DataBulkDeleteCommand(), context);
    }
}
exports.DataBulkDeleteCommand = DataBulkDeleteCommand;
DataBulkDeleteCommand.theDescription = Messages.get('DataBulkDeleteDescription');
DataBulkDeleteCommand.longDescription = Messages.get('DataBulkDeleteLongDescription');
DataBulkDeleteCommand.help = Messages.get('DataBulkDeleteHelp');
DataBulkDeleteCommand.requiresProject = false;
DataBulkDeleteCommand.flagsConfig = {
    sobjecttype: command_1.flags.string({
        char: 's',
        required: true,
        hidden: false,
        description: Messages.get('DataBulkDeleteSobjectTypeDescription'),
        longDescription: Messages.get('DataBulkDeleteSobjectTypeLongDescription')
    }),
    csvfile: command_1.flags.filepath({
        char: 'f',
        required: true,
        hidden: false,
        description: Messages.get('DataBulkDeleteCsvFilePathDescription'),
        longDescription: Messages.get('DataBulkDeleteCsvFilePathLongDescription')
    }),
    wait: command_1.flags.minutes({
        char: 'w',
        required: false,
        hidden: false,
        description: Messages.get('DataBulkDeleteWaitDescription'),
        longDescription: Messages.get('DataBulkDeleteWaitLongDescription')
    })
};
DataBulkDeleteCommand.requiresUsername = true;

//# sourceMappingURL=delete.js.map
