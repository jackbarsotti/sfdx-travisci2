"use strict";
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
// This is the legacy converted command file. Ignoring code-coverage since this is generated.
// THIS SHOULD BE REMOVED WHEN CONVERTED TO EXTEND SfdxCommand
/* istanbul ignore file */
const command_1 = require("@salesforce/command");
const Messages = require("../../../../lib/force-cli/force-cli-messages");
const ReporterCommand_1 = require("../../../../ReporterCommand");
class DataSoqlQueryCommand extends ReporterCommand_1.ReporterCommand {
    async run() {
        const context = await this.resolveLegacyContext();
        const { DataSoqlQueryCommand } = require('../../../../lib/data/dataSoqlQueryCommand');
        return await this.execLegacyCommand(new DataSoqlQueryCommand(), context);
    }
}
exports.DataSoqlQueryCommand = DataSoqlQueryCommand;
DataSoqlQueryCommand.theDescription = Messages.get('DataSOQLQueryDescription');
DataSoqlQueryCommand.longDescription = Messages.get('DataSOQLQueryLongDescription');
DataSoqlQueryCommand.help = Messages.get('DataSOQLQueryHelp');
DataSoqlQueryCommand.requiresProject = false;
DataSoqlQueryCommand.requiresUsername = true;
DataSoqlQueryCommand.supportsPerfLogLevelFlag = true;
DataSoqlQueryCommand.resultFormatOptions = { default: 'human' };
DataSoqlQueryCommand.flagsConfig = {
    query: command_1.flags.string({
        char: 'q',
        required: true,
        hidden: false,
        description: Messages.get('DataSOQLQueryQueryDescription'),
        longDescription: Messages.get('DataSOQLQueryQueryLongDescription')
    }),
    usetoolingapi: command_1.flags.boolean({
        char: 't',
        required: false,
        hidden: false,
        description: Messages.get('DataSOQLQueryToolingDescription'),
        longDescription: Messages.get('DataSOQLQueryToolingLongDescription')
    })
};

//# sourceMappingURL=query.js.map
