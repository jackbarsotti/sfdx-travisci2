"use strict";
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
// This is the legacy converted command file. Ignoring code-coverage since this is generated.
// THIS SHOULD BE REMOVED WHEN CONVERTED TO EXTEND SfdxCommand
/* istanbul ignore file */
const command_1 = require("@salesforce/command");
const Messages = require("../../../../lib/force-cli/force-cli-messages");
const ToolbeltCommand_1 = require("../../../../ToolbeltCommand");
class ApexLogGetCommand extends ToolbeltCommand_1.ToolbeltCommand {
    async run() {
        const context = await this.resolveLegacyContext();
        const { ApexLogGetCommand } = require('../../../../lib/apex/apexLogGetCommand');
        return await this.execLegacyCommand(new ApexLogGetCommand(), context);
    }
}
exports.ApexLogGetCommand = ApexLogGetCommand;
ApexLogGetCommand.theDescription = Messages.get('ApexLogGetDescription');
ApexLogGetCommand.longDescription = Messages.get('ApexLogGetLongDescription');
ApexLogGetCommand.help = Messages.get('ApexLogGetHelp');
ApexLogGetCommand.requiresProject = false;
ApexLogGetCommand.flagsConfig = {
    color: command_1.flags.boolean({
        char: 'c',
        required: false,
        hidden: false,
        description: Messages.get('ApexLogTailColorizeDescription'),
        longDescription: Messages.get('ApexLogTailColorizeLongDescription')
    }),
    logid: command_1.flags.id({
        char: 'i',
        required: false,
        hidden: false,
        description: Messages.get('ApexLogGetIdDescription'),
        longDescription: Messages.get('ApexLogGetIdLongDescription'),
        exclusive: ['number']
    }),
    number: command_1.flags.number({
        char: 'n',
        required: false,
        hidden: false,
        min: 1,
        max: 25,
        description: Messages.get('ApexLogGetLastNumberDescription'),
        longDescription: Messages.get('ApexLogGetLastNumberLongDescription')
    })
};
ApexLogGetCommand.requiresUsername = true;

//# sourceMappingURL=get.js.map
