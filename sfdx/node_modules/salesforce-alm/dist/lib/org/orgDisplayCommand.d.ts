/**
 * Provides the user with the connection details for a specified org or the default workspace org.
 */
declare class OrgDisplayCommand {
    [property: string]: any;
    constructor();
    /**
     * Executes this command
     * @param context - the cli context
     * @returns {Promise}
     */
    execute(context: any): any;
    /**
     * Returns a success message that's human readable.
     * @param orgDesc - the org description object returned from execute.
     */
    getHumanSuccessMessage(orgDesc: any): string;
    /**
     * Log some test information to the console, but only log when json is not
     * specified. Otherwise the only output should be in json format which will
     * print to the console when the command returns on the command handler.
     * @param {string} header The header for the table OR a string if no table
     *    (object) is specified.
     * @param {object|array} data The data to display in the table. Data will be
     *    converted to an array if an object is passed in.
     * @param {array} columns An array of column information, such as key, label,
     * and formatter.
     */
    log(header: any, data: any, columns: any): void;
}
export = OrgDisplayCommand;
