/**
 * Shape API object, for all of your ShapeRepresentation needs
 * @constructor
 * @param forceApi The force api
 * @param shapeOrg The org we'll be querying against
 */
declare class ShapeRepresentationApi {
    private force;
    private shapeOrg;
    constructor(forceApi: any, shapeOrg: any);
    create(description?: string): Promise<any>;
    /**
     * Delete all ShapeRepresentation records for the shapeOrg.
     * @return List of SR IDs that were deleted
     */
    deleteAll(): Promise<any>;
    /**
     * Find all ShapeRepresentation records with a state of Active or InProgress.
     * @return SOQL response or null
     */
    findShapesOrNull(): Promise<any>;
    /**
     * Check if the ShapeExportPilot preference is enabled.
     */
    isFeatureEnabled(): Promise<any>;
    isFeatureEnabledBefore48(): Promise<any>;
    isFeatureEnabledAfter48(): Promise<any>;
    isShapeId(shapeId: string): boolean;
    getShapeRepresentation(shapeId: string): Promise<any>;
}
export = ShapeRepresentationApi;
