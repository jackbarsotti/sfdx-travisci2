"use strict";
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
const Config = require("../force-cli/force-cli-config");
const Display = require("../force-cli/force-cli-display");
const util = require("util");
const core_1 = require("@salesforce/core");
class ApiLimitsCommand {
    async execute(context) {
        try {
            let conn = await Config.getActiveConnection(context);
            let geturl = util.format('%s/services/data/v%s/limits', conn.instanceUrl, conn.version);
            const result = await conn.request(geturl);
            const limits = exports.parseResponse(result);
            Display.apiLimits(limits);
            return limits;
        }
        catch (err) {
            throw core_1.SfdxError.wrap(err);
        }
    }
}
exports.ApiLimitsCommand = ApiLimitsCommand;
/**
 * constructs ApiLimit objects from server response
 * exposed for unit testing
 * @param {Object} response
 * @returns {ApiLimit[]}
 */
exports.parseResponse = function (response) {
    let limits = [];
    for (let limitName in response) {
        if (response.hasOwnProperty(limitName)) {
            limits.push({
                name: limitName,
                max: response[limitName]['Max'],
                remaining: response[limitName]['Remaining']
            });
        }
    }
    return limits;
};

//# sourceMappingURL=apiLimitsCommand.js.map
