declare class ProfileApi {
    [property: string]: any;
    constructor(org: any, includeUserLicenses: any);
    _copyNodes(originalDom: any, parentElement: any, childElement: any, members: any, appendToNode: any): boolean;
    _findAllProfiles(): string[];
    /**
     * For any profile present in the workspace, this function generates a subset of data that only contains references
     * to items in the manifest.
     *
     * @param destPath location of new profiles
     * @param package manifest json object
     */
    generateProfiles(destPath: any, manifest: any): any[];
    /**
     * Filter out all profiles in the manifest and if any profiles exists in the workspace, add them to the manifest.
     *
     * @param typesArr array of objects { name[], members[] } that represent package types JSON.
     */
    filterAndGenerateProfilesForManifest(typesArr: any): any;
}
export = ProfileApi;
