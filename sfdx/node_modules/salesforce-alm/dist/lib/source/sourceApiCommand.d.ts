export declare class SourceApiCommand {
    private readonly isSourceDelete;
    static readonly SOURCE_DEPLOY: string;
    static readonly SOURCE_PUSH: string;
    private orgApi;
    private verbose;
    private json;
    private checkonly;
    private isQuickDeploy;
    private isAsync;
    private logger;
    private deploytype;
    private pushMsgs;
    private deployMsgs;
    private commonMsgs;
    private userCanceled;
    private metadataTypeDeployed;
    constructor(isSourceDelete: boolean);
    getPreExecuteMessage({ orgId, username }: {
        orgId: any;
        username: any;
    }): any;
    /**
     * Executes the source deploy or push command
     * @param context - the cli context
     * @returns {Promise}
     */
    execute(context: any): Promise<any>;
    private getHumanSuccessMessageDelegate;
    /**
     * Validates the source push or deploy command parameters
     * @param context - the cli context
     * @returns {Promise}
     */
    validate(context: any): Promise<any>;
    private isDeploy;
    /**
     * This indicates to index.js that this command should produce tabular output.
     * @returns {*[]}
     */
    _getColumnData(): {
        key: string;
        label: any;
    }[];
    getHumanErrorMessage(error: any): void;
    _getErrorColumnData(): {
        key: string;
        label: any;
    }[];
    createEvent(): void;
}
