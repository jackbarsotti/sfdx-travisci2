"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
const gitignoreParser = require("gitignore-parser");
const fs = require("fs");
const path = require("path");
const projectDirUtil = require("../core/projectDir");
class ForceIgnore {
    constructor(pathToForceIgnoreFile = projectDirUtil.getPath()) {
        this.pathToForceIgnoreFile = pathToForceIgnoreFile;
        try {
            const forceIgnoreContents = this.parseContents(fs.readFileSync(path.join(this.pathToForceIgnoreFile, '.forceignore'), 'utf8'));
            this.parser = gitignoreParser.compile(forceIgnoreContents);
        }
        catch (err) {
            this.parser = null;
        }
    }
    denies(file) {
        let denies = false;
        if (this.parser) {
            denies = this.parser.denies(path.relative(this.pathToForceIgnoreFile, file));
        }
        return denies;
    }
    accepts(file) {
        let accepts = true;
        if (this.parser) {
            accepts = this.parser.accepts(path.relative(this.pathToForceIgnoreFile, file));
        }
        return accepts;
    }
    parseContents(contents) {
        return contents
            .split('\n')
            .map(line => line.trim())
            .map(line => line.replace(/[\\\/]/g, path.sep))
            .map(line => line.replace(/^\\/, ''))
            .join('\n');
    }
}
exports.ForceIgnore = ForceIgnore;

//# sourceMappingURL=forceIgnore.js.map
