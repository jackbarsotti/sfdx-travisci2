import Org = require('../core/scratchOrgApi');
/**
 * module interface for the authorization command
 * @param force - reference to the force implementation
 * @constructor
 */
declare class AuthCommand {
    [property: string]: any;
    constructor(force?: any);
    /**
     * main processing for the command. other commands should implement a similar prototype
     * @param context - the cli context (flags)
     * @param stdinValues - map of stdin values
     * @returns {BBPromise.<Error>}
     */
    execute(context: any, stdinValues?: any): Promise<any>;
    /**
     * This method will be used when new authentication is needed.
     * @param org - orgApi
     * @param context - the cli context (flags)
     * @param isJwt - authentication via JWT token
     * @param isSfdxUrl - authentication via web login
     * @param force - reference to the force implementation
     * @param stdinValues - map of stdin values
     * @returns {BBPromise.<Error>}
     */
    static doNewAuth: (org: Org, context: any, isJwt: any, isSfdxUrl: any, force: any, stdinValues?: any) => any;
    static getOpen(): any;
    validate(context: any): any;
    /**
     * returns a human readable message for a cli output
     * @param org - the data representing the authorized org
     * @returns {string}
     */
    getHumanSuccessMessage(resp: any): any;
}
export = AuthCommand;
