export interface MdapiDeployCancelOptions {
    jobid: string;
    wait?: number;
    deprecatedStatusRequest?: boolean;
    result?: MdapiDeployCancelOutput;
}
export interface MdapiDeployCancelOutput {
    done: boolean;
    id: string;
}
export interface MDDeployCancelReportOutput {
    canceledBy: string;
    canceledByName: string;
    checkOnly: boolean;
    completedDate: string;
    createdBy: string;
    createdByName: string;
    createdDate: string;
    details: {
        componentSuccesses: string[];
        runTestResult: {
            numFailures: string;
            numTestsRun: string;
            totalTime: string;
        };
    };
    done: boolean;
    id: string;
    ignoreWarnings: boolean;
    lastModifiedDate: string;
    numberComponentErrors: number;
    numberComponentsDeployed: number;
    numberComponentsTotal: number;
    numberTestErrors: number;
    numberTestsCompleted: number;
    numberTestsTotal: number;
    rollbackOnError: boolean;
    runTestsEnabled: string;
    startDate: string;
    status: string;
    success: boolean;
}
/**
 * API that wraps Metadata API to cancel a deployment from a given org.
 *
 * @param force
 * @constructor
 */
export declare class MdapiDeployCancel {
    private _reporter;
    constructor(org: any);
    private _getCoreConnection;
    private _checkCancelStatus;
    cancel(orgApi: any, options: MdapiDeployCancelOptions): Promise<MDDeployCancelReportOutput>;
}
