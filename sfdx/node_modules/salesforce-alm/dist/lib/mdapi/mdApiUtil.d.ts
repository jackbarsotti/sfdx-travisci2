import { Connection } from '@salesforce/core';
export declare type MdapiDeployRecentValidationOptions = {
    validateddeployrequestid: string;
    wait?: number;
    rollbckonerror?: boolean;
    ignorewarnings?: boolean;
};
export declare type DeployOptions = {
    rollbackOnError?: boolean;
    testLevel?: string;
    runTests?: string;
    autoUpdatePackage?: boolean;
    ignoreWarnings?: boolean;
    checkOnly?: boolean;
    singlePackage?: boolean;
};
export declare class MetadataConnection extends Connection {
    _mdapiSoapDeployRecentValidation(options: MdapiDeployRecentValidationOptions, connection: Connection): Promise<any>;
    _mdapiRestDeployRecentValidation(options: MdapiDeployRecentValidationOptions, connection: Connection): Promise<any>;
}
export declare function getMetadataConnection(orgApi: any): Promise<Connection>;
export declare function mdapiDeployRecentValidation(orgApi: any, options: MdapiDeployRecentValidationOptions): Promise<any>;
export declare class MetadataTransportInfo {
    static isRestDeploy(): Promise<boolean>;
    static isRestDeployWithWaitZero(options: any): Promise<boolean>;
    static validateExclusiveFlag(options: any, param1: any, param2: any): void;
}
