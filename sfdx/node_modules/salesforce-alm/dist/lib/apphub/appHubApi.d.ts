export declare const APPHUB_ENDPOINTS: {
    discover: string;
    envAcccess: string;
};
export declare class AppHubInfo {
    private appHubAppConfig;
    constructor(appHubAppConfig?: {
        versions: any[];
    });
    getConfig(): any;
    getVersions(): String[];
}
export interface AppHubApi {
    getAppInfo(): AppHubInfo;
    postScratchOrgCreate(scratchOrgInfoResponse: any, scratchOrg: any): Promise<any>;
    doThrowErrors(): void;
}
/**
 * No operation AppHub API.  Org may not be a DevHub or AppHub is not installed.
 */
export declare class NoOpAppHubApiImpl implements AppHubApi {
    private appHubInfo;
    constructor();
    getAppInfo(): AppHubInfo;
    postScratchOrgCreate(scratchOrgInfoResponse: any, scratchOrg: any): Promise<any>;
    doThrowErrors(): void;
}
export declare const NOOP: NoOpAppHubApiImpl;
/**
 * Creates AppHub API instance for given Org.
 *
 * No-op API is returned if:
 *   - Org is NOT a DevHub (determined via local config),
 *   - AppHub is not installed,
 *   - AppHub CLI integration is disabled via SFDX_DISABLE_APP_HUB,
 *   - Error occurs
 *
 * @param hubOrg
 * @returns {Promise<AppHubApi>}
 */
export declare function getAppHub(hubOrg: any): Promise<AppHubApi>;
