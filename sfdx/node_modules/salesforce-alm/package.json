{
  "name": "salesforce-alm",
  "version": "49.3.0",
  "description": "This package contains tools, and APIs, for an improved salesforce.com developer experience.",
  "main": "dist/index.js",
  "directories": {
    "lib": "./dist/lib"
  },
  "files": [
    "/oclif.manifest.json",
    "/messages",
    "/metadata",
    "/dist",
    "/gen",
    "/schemas",
    "!/dist/**/*.js.map",
    "!/dist/test"
  ],
  "oclif": {
    "bin": "sfdx",
    "commands": "./dist/commands",
    "topics": {
      "force": {
        "description": "tools for the Salesforce developer",
        "longDescription": "Commands to develop on the Salesforce Platform.",
        "trailblazerCommunityLink": {
          "url": "https://success.salesforce.com/_ui/core/chatter/groups/GroupProfilePage?g=0F93A000000HTp1",
          "name": "Salesforce DX"
        },
        "subtopics": {
          "alias": {
            "description": "manage username aliases",
            "longDescription": "Use the alias commands to manage username aliases."
          },
          "apex": {
            "description": "work with Apex code",
            "longDescription": "Use the apex commands to create Apex classes, execute anonymous blocks, view your logs, run Apex tests, and view Apex test results.",
            "subtopics": {
              "log": {
                "description": "work with Apex logs"
              },
              "test": {
                "description": "work with Apex tests"
              }
            }
          },
          "auth": {
            "description": "authorize an org for use with the Salesforce CLI",
            "longDescription": "Use the auth commands to authorize a Salesforce org for use with the Salesforce CLI.",
            "subtopics": {
              "jwt": {
                "description": "authorize an org using JWT"
              },
              "sfdxurl": {
                "description": "authorize an org using sfdxurl"
              },
              "web": {
                "description": "authorize an org using a web browser"
              }
            }
          },
          "community": {
            "description": "create and publish a community",
            "longDescription": "Use the community commands to create and publish a community, and view a list of available templates in you org."
          },
          "config": {
            "description": "configure the Salesforce CLI",
            "longDescription": "Use the config commands to view and set your Salesforce CLI configuration values. Set your default Dev Hub and scratch org, and your default instance URL, either globally or at the project level."
          },
          "data": {
            "description": "manipulate records in your org",
            "longDescription": "Use the data commands to manipulate records in your org. Commands are available to help you work with various APIs. Import CSV files with the Bulk API. Export and import data that includes master-detail relationships with the SObject Tree Save API. Perform simple CRUD operations on individual records with the REST API.",
            "subtopics": {
              "bulk": {
                "description": "manipulate records using the bulk API"
              },
              "record": {
                "description": "manipulate records using the enterprise API"
              },
              "soql": {
                "description": "fetch records using SOQL"
              },
              "tree": {
                "description": "manipulate records using the tree API"
              }
            }
          },
          "doc": {
            "description": "display help for force commands",
            "hidden": true,
            "subtopics": {
              "commands": {
                "description": "display help for force commands"
              }
            }
          },
          "lightning": {
            "description": "create Aura components and Lightning web components, and test Aura components",
            "longDescription": "Use the lightning commands to create Aura components and Lightning web components and to test Aura components. As of API version 45.0, you can build Lightning components using two programming models: Lightning Web Components, and the original model, Aura Components. Lightning web components and Aura components can coexist and interoperate on a page.",
            "subtopics": {
              "test": {
                "description": "test Aura components"
              }
            }
          },
          "limits": {
            "description": "view your org’s limits",
            "longDescription": "Use the limits commands to view your org’s limits and how close you are to reaching them.",
            "subtopics": {
              "api": {
                "description": "view your org’s API limits"
              }
            }
          },
          "mdapi": {
            "description": "retrieve and deploy metadata using Metadata API",
            "longDescription": "Use the mdapi commands to retrieve and deploy Metadata API–formatted files that represent components in an org, or to convert Metadata API–formatted metadata into the source format used in Salesforce DX projects.",
            "subtopics": {
              "deploy": {
                "description": "deploy metadata using Metadata API"
              },
              "retrieve": {
                "description": "retrieve metadata using Metadata API"
              }
            }
          },
          "org": {
            "description": "manage your orgs",
            "longDescription": "Use the org commands to manage the orgs you use with Salesforce CLI. Create and delete scratch orgs, list your created and authorized orgs, and open orgs in your browser.",
            "subtopics": {
              "shape": {
                "description": "manage org shape",
                "state": "closedPilot",
                "trailblazerCommunityLink": {
                  "url": "https://success.salesforce.com/_ui/core/chatter/groups/GroupProfilePage?g=0F93A0000009TPk",
                  "name": "W19 Pilot: Org Shape for Scratch Orgs"
                }
              },
              "snapshot": {
                "description": "manage org snapshots",
                "state": "closedPilot",
                "trailblazerCommunityLink": {
                  "url": "https://success.salesforce.com/_ui/core/chatter/groups/GroupProfilePage?g=0F93A00000020d5",
                  "name": "W19 Pilot: Scratch Org Snapshots"
                }
              }
            }
          },
          "package": {
            "description": "develop and install packages",
            "longDescription": "Use the package commands to develop and install packages.",
            "trailblazerCommunityLink": {
              "url": "https://success.salesforce.com/_ui/core/chatter/groups/GroupProfilePage?g=0F93A000000Lg5U",
              "name": "Unlocked Packages and Managed 2GPs"
            },
            "subtopics": {
              "hammertest": {
                "description": "run ISV Hammer tests",
                "state": "openPilot",
                "trailblazerCommunityLink": {
                  "url": "https://success.salesforce.com/_ui/core/chatter/groups/GroupProfilePage?g=0F93A000000DN6T",
                  "name": "ISV Hammer - Pilot"
                }
              },
              "install": {
                "description": "install packages"
              },
              "installed": {
                "description": "list installed packages"
              },
              "uninstall": {
                "description": "uninstall packages"
              },
              "version": {
                "description": "develop package versions",
                "subtopics": {
                  "create": {
                    "description": "report on created package versions"
                  }
                }
              }
            }
          },
          "package1": {
            "description": "develop first-generation managed and unmanaged packages",
            "longDescription": "Use the package1 commands to create and view first-generation package versions in your Dev Hub org.",
            "subtopics": {
              "version": {
                "description": "develop package versions",
                "subtopics": {
                  "create": {
                    "description": "report on created package versions"
                  }
                }
              }
            }
          },
          "project": {
            "description": "set up a Salesforce DX project",
            "longDescription": "Use the project commands to set up a Salesforce DX project."
          },
          "schema": {
            "description": "view standard and custom objects",
            "longDescription": "Use the schema commands to view information about the standard and custom objects in your org.",
            "subtopics": {
              "sobject": {
                "description": "view standard and custom objects"
              }
            }
          },
          "source": {
            "description": "sync your project with your orgs",
            "longDescription": "Use the source commands to push and pull source to and from your scratch orgs, to deploy and retrieve source to and from non-source-tracked orgs, to see synchronization changes between your project and scratch orgs, and to convert your source to the metadata format for Metadata API deployments.",
            "trailblazerCommunityLink": {
              "url": "https://success.salesforce.com/_ui/core/chatter/groups/GroupProfilePage?g=0F93A00000020ly",
              "name": "Salesforce CLI New Command Feedback"
            }
          },
          "user": {
            "description": "perform user-related admin tasks",
            "longDescription": "Use the user commands to perform user-related admin tasks.",
            "subtopics": {
              "password": {
                "description": "perform password-related admin tasks"
              },
              "permset": {
                "description": "perform permset-related admin tasks"
              }
            }
          },
          "visualforce": {
            "description": "create and edit Visualforce files",
            "longDescription": "Use the visualforce commands to create Visualforce pages and components."
          }
        }
      }
    }
  },
  "dependencies": {
    "@oclif/config": "^1.14.0",
    "@oclif/errors": "^1.2.2",
    "@oclif/plugin-help": "^2.2.3",
    "@salesforce/command": "~3.0.0",
    "@salesforce/core": "~2.7.0",
    "@salesforce/kit": "~1.2.1",
    "@salesforce/telemetry": "~2.0.1",
    "@salesforce/ts-types": "~1.2.1",
    "@salesforce/plugin-analytics": "1.12.0",
    "adm-zip": "0.4.13",
    "ansi-styles": "3.2.1",
    "antlr4": "4.7.2",
    "archiver": "1.0.1",
    "bluebird": "3.5.5",
    "bunyan-sfdx-no-dtrace": "1.8.2",
    "chalk": "2.4.2",
    "cli-spinner": "0.2.10",
    "cli-ux": "^5.4.4",
    "csv-parse": "4.6.5",
    "debug": "3.2.6",
    "fs-extra": "4.0.3",
    "gitignore-parser": "0.0.2",
    "glob": "7.1.4",
    "heroku-cli-util": "8.0.11",
    "js2xmlparser": "3.0.0",
    "jsen": "0.6.6",
    "jsforce": "1.9.3",
    "jsonwebtoken": "8.5.1",
    "klaw": "2.1.1",
    "lodash": "4.17.15",
    "longjohn": "0.2.12",
    "mime": "1.6.0",
    "mkdirp": "0.5.1",
    "moment": "2.24.0",
    "opn": "5.5.0",
    "optional-js": "1.3.1",
    "pluralize": "3.1.0",
    "process-promises": "1.0.0",
    "readline-sync": "1.4.9",
    "replace": "1.1.0",
    "request": "2.88.0",
    "request-promise-native": "1.0.5",
    "salesforce-lightning-cli": "2.0.4",
    "selenium-standalone": "6.16.0",
    "sfdx-faye": "1.0.9",
    "strip-ansi": "5.2.0",
    "webdriverio": "4.14.4",
    "xml2js": "0.4.19",
    "xmldom-sfdx-encoding": "0.1.30"
  },
  "scripts": {
    "compile": "node_modules/.bin/gulp compile",
    "compile-windows": "node node_modules\\gulp\\bin\\gulp.js",
    "eslint": "./node_modules/eslint/bin/eslint.js src/commands src/lib src/test src/index.js",
    "eslint-with-style": "./node_modules/eslint/bin/eslint.js -f checkstyle -o ./checkstyle.xml src/commands src/lib src/test src/index.js",
    "eslint-with-style-windows": "node node_modules\\eslint\\bin\\eslint.js -f checkstyle -o checkstyle.xml src/commands src/lib src/test src/index.js",
    "lint": "npm run eslint",
    "precommit": "npm run lint",
    "postpack": "rm -f oclif.manifest.json",
    "prepack": "node_modules/.bin/oclif-dev manifest",
    "test": "npm run lint && node_modules/.bin/gulp && npm run test-only",
    "test-only": "node_modules/.bin/mocha --exit --require source-map-support/register --recursive dist/test/unit",
    "test-debug": "find dist/test -name \\*Test.js -exec scripts/debug-mocha.sh '{}' \\;",
    "docker-test": "scripts/docker-test.sh",
    "unit": "node_modules/.bin/gulp && node_modules/.bin/mocha --exit --recursive -t 240000 dist/test/unit/ -R xunit-file",
    "integration": "node_modules/.bin/gulp && node_modules/.bin/mocha --exit --require ./dist/test/mochaInit.js --recursive dist/test/integration -t 240000 -R xunit-file",
    "integration-platform-cli": "node_modules/.bin/mocha --exit --require ./dist/test/mochaInit.js --recursive dist/test/integration/platform_cli -t 605000 -R xunit-file",
    "integration-platform-cli-windows": "node node_modules\\mocha\\bin\\mocha --exit --require dist\\test\\mochaInit.js --recursive dist\\test\\integration\\platform_cli -t 605000 -R xunit-file",
    "integration-packaging": "node_modules/.bin/mocha --exit --require ./dist/test/mochaInit.js --recursive dist/test/integration/packaging -t 605000 -R xunit-file",
    "integration-packaging-windows": "node node_modules\\mocha\\bin\\mocha --exit --require dist\\test\\mochaInit.js --recursive dist\\test\\integration\\packaging -t 605000 -R xunit-file",
    "integration-mdapi": "node_modules/.bin/mocha --exit --require ./dist/test/mochaInit.js --recursive dist/test/integration/mdapi -t 605000 -R xunit-file",
    "integration-mdapi-windows": "node node_modules\\mocha\\bin\\mocha --exit --require dist\\test\\mochaInit.js --recursive dist/test/integration/mdapi -t 605000 -R xunit-file",
    "coverage": "node_modules/.bin/nyc --reporter cobertura npm run integration",
    "coverage-platform-cli": "node_modules/.bin/nyc --reporter cobertura --reporter json-summary --reporter json npm run integration-platform-cli",
    "coverage-platform-cli-windows": "node node_modules\\nyc\\bin\\nyc.js --reporter cobertura --reporter json-summary --reporter json npm run integration-platform-cli-windows",
    "coverage-packaging": "node_modules/.bin/nyc --reporter cobertura --reporter json-summary --reporter json npm run integration-packaging",
    "coverage-packaging-windows": "node node_modules\\nyc\\bin\\nyc.js --reporter cobertura --reporter json-summary --reporter json npm run integration-packaging-windows",
    "coverage-mdapi": "node_modules/.bin/nyc --reporter cobertura --reporter json-summary --reporter json npm run integration-mdapi",
    "coverage-mdapi-windows": "node node_modules\\nyc\\bin\\nyc.js --reporter cobertura --reporter json-summary --reporter json npm run integration-mdapi-windows",
    "coverage-unit": "node_modules/.bin/nyc --reporter cobertura npm run unit",
    "coverage-unit-windows": "node node_modules\\nyc\\bin\\nyc.js --reporter cobertura node node_modules\\mocha\\bin\\mocha --exit --recursive -t 240000 dist\\test\\unit -R xunit-file",
    "coverage-unit-html": "node_modules/.bin/nyc --reporter html npm run unit",
    "cucumber": "node_modules/.bin/gulp && cucumber-js dist/test/features",
    "cucumber-ci": "node_modules/.bin/gulp && cucumber-js dist/test/features --format=json | cucumber-junit > cucumber-xunit.xml",
    "coverage-report": "node_modules/.bin/nyc report --reporter html --reporter json-summary --reporter json",
    "q3-smoke-tests": "node_modules/.bin/gulp && node_modules/.bin/mocha --exit dist/test/e2e/q3SmoketestCli.js -t 240000 -b -R xunit-file"
  },
  "keywords": [
    "force.com",
    "salesforce",
    "salesforce-dx",
    "salesforcedx",
    "apex",
    "visualforce",
    "lightning",
    "heroku-plugin",
    "heroku"
  ],
  "author": "Tim Noonan",
  "license": "BSD-3-Clause",
  "devDependencies": {
    "@oclif/dev-cli": "1",
    "@salesforce/dev-config": "^1.5.0",
    "@salesforce/ts-sinon": "^1.1.3",
    "@types/chai": "4.1.7",
    "@types/chai-as-promised": "7.1.0",
    "@types/chai-fs": "2.0.1",
    "@types/chai-string": "1.4.1",
    "@types/csv-parse": "1.1.5",
    "@types/jsforce": "^1.9.17",
    "@types/klaw": "^3.0.1",
    "@types/lodash": "4.14.123",
    "@types/mocha": "2.2.32",
    "@types/node": "^13.13.4",
    "@types/pluralize": "0.0.27",
    "@types/request-promise-native": "1.0.1",
    "@types/sinon": "7.0.9",
    "@types/xml2js": "0.0.28",
    "chai": "4.2.0",
    "chai-as-promised": "7.1.1",
    "chai-fs": "1.0.0",
    "chai-string": "1.2.0",
    "chance": "1.0.4",
    "child-process-promise": "2.2.0",
    "csvjson": "2.2.0",
    "cucumber": "2.0.0-rc.2",
    "cucumber-junit": "1.6.0",
    "deep-equal-in-any-order": "^1.0.21",
    "del": "3.0.0",
    "eslint": "3.2.2",
    "eslint-config-airbnb-base": "5.0.1",
    "eslint-plugin-import": "1.13.0",
    "gulp": "4.0.0",
    "gulp-sourcemaps": "2.6.0",
    "gulp-typescript": "4.0.2",
    "http-call": "5.2.2",
    "husky": "^4.2.1",
    "json5": "2.1.0",
    "mocha": "5.2.0",
    "ncp": "2.0.0",
    "nock": "10.0.6",
    "nyc": "13.3.0",
    "os-locale": "1.4.0",
    "prettier": "^1.19.1",
    "pretty-quick": "^2.0.1",
    "salesforcedx-shell-utils": "1.1.1",
    "sinon": "7.2.7",
    "source-map-support": "0.5.10",
    "stdout-stderr": "0.1.9",
    "ts-node": "7.0.1",
    "tslint": "5.11.0",
    "typescript": "3.8.3",
    "xunit-file": "1.0.0"
  },
  "husky": {
    "hooks": {
      "pre-commit": "pretty-quick --staged"
    }
  },
  "nyc": {
    "extension": [
      ".ts",
      ".tsx",
      ".js"
    ],
    "exclude": [
      "dist/test/**/*",
      "dist/gen/**/*"
    ]
  }
}
