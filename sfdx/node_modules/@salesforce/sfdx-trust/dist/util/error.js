"use strict";
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
const kit_1 = require("@salesforce/kit");
class InvalidUrlError extends kit_1.NamedError {
    constructor(url, cause) {
        super('InvalidUrl', `The following url is not valid ${url}`, cause);
    }
}
exports.InvalidUrlError = InvalidUrlError;
class MissingRequiredParameter extends kit_1.NamedError {
    constructor(parameterName) {
        super('MissingRequiredParameter', `The parameter ${parameterName} is missing but required.`);
    }
}
exports.MissingRequiredParameter = MissingRequiredParameter;
class ExecProcessFailed extends kit_1.NamedError {
    constructor(process, errorCode, message) {
        super('Sub-process failed.', `Exec'd subprocess ${process} failed with error code '${errorCode}' and message '${message}'.`);
    }
}
exports.ExecProcessFailed = ExecProcessFailed;
class UnexpectedHost extends kit_1.NamedError {
    constructor(url) {
        super('UnexpectedHost', `The host is not allowed to provide signing information. [${url}]`);
    }
}
exports.UnexpectedHost = UnexpectedHost;
class UnauthorizedSslConnection extends kit_1.NamedError {
    constructor(url) {
        const message = `An attempt is being made to retrieve content from an unauthorized ssl url [${url}].
This endpoint could be using a self signed certificate.
To allow this set the following environment variable: NODE_TLS_REJECT_UNAUTHORIZED=0`;
        super('UnauthorizedSslConnection', message);
    }
}
exports.UnauthorizedSslConnection = UnauthorizedSslConnection;
class SignSignedCertError extends kit_1.NamedError {
    constructor() {
        super('SelfSignedCert', 'Encountered a self signed certificated. To enable "export NODE_TLS_REJECT_UNAUTHORIZED=0"');
    }
}
exports.SignSignedCertError = SignSignedCertError;
//# sourceMappingURL=error.js.map