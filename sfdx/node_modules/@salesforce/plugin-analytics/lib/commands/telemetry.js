"use strict";
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("@oclif/command");
const telemetry_1 = require("@salesforce/telemetry");
const analytics_1 = require("../analytics");
class AnalyticsGet extends command_1.Command {
    async run() {
        const enabled = await telemetry_1.default.determineSfdxTelemetryEnabled();
        this.log(`Telemetry is ${enabled ? 'enabled' : 'disabled'}.`);
        this.log(`Telemetry tmp directory is ${analytics_1.default.tmpDir}.`);
        this.log(`Telemetry cache directory is ${this.config.cacheDir}.`);
        this.log();
        this.log(`Salesforce CLI ID is ${global.cliTelemetry.getCLIId()}.`);
    }
}
exports.default = AnalyticsGet;
AnalyticsGet.hidden = true;
//# sourceMappingURL=telemetry.js.map