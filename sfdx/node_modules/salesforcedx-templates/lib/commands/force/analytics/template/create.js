"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
/*
 * Copyright (c) 2019, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
const command_1 = require("@salesforce/command");
const core_1 = require("@salesforce/core");
const path = require("path");
const analyticsTemplateGenerator_1 = require("../../../../generators/analyticsTemplateGenerator");
const utils_1 = require("../../../../utils");
core_1.Messages.importMessagesDirectory(__dirname);
class AnalyticsTemplate extends utils_1.TemplateCommand {
    run() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            utils_1.CreateUtil.checkInputs(this.flags.templatename);
            const fileparts = path.resolve(this.flags.outputdir).split(path.sep);
            // tslint:disable-next-line:no-unused-expression
            if (!fileparts.includes('waveTemplates')) {
                throw new Error(utils_1.MessageUtil.get('MissingWaveTemplatesDir'));
            }
            return this.runGenerator(analyticsTemplateGenerator_1.default);
        });
    }
}
exports.default = AnalyticsTemplate;
AnalyticsTemplate.examples = [
    '$ sfdx force:analytics:template:create -n myTemplate -d outputdir'
];
AnalyticsTemplate.description = utils_1.MessageUtil.buildDescription('AnalyticsTemplateDescription', false);
AnalyticsTemplate.help = utils_1.MessageUtil.buildHelpText(AnalyticsTemplate.examples, false);
AnalyticsTemplate.longDescription = utils_1.MessageUtil.get('AnalyticsTemplateLongDescription');
AnalyticsTemplate.flagsConfig = {
    outputdir: command_1.flags.string({
        char: 'd',
        description: utils_1.MessageUtil.get('OutputDirFlagDescription'),
        longDescription: utils_1.MessageUtil.get('OutputDirFlagLongDescription'),
        default: '.'
    }),
    apiversion: command_1.flags.builtin(),
    templatename: command_1.flags.string({
        char: 'n',
        description: utils_1.MessageUtil.get('AnalyticsTemplateNameFlagDescription'),
        longDescription: utils_1.MessageUtil.get('AnalyticsTemplateNameFlagLongDescription'),
        required: true
    })
};
//# sourceMappingURL=create.js.map