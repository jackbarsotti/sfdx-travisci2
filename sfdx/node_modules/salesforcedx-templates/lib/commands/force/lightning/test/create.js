"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
/*
 * Copyright (c) 2019, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
const command_1 = require("@salesforce/command");
const lightningTestGenerator_1 = require("../../../../generators/lightningTestGenerator");
const utils_1 = require("../../../../utils");
const lightningTestFileSuffix = /.resource$/;
class LightningTest extends utils_1.TemplateCommand {
    run() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            utils_1.CreateUtil.checkInputs(this.flags.testname);
            utils_1.CreateUtil.checkInputs(this.flags.template);
            return this.runGenerator(lightningTestGenerator_1.default);
        });
    }
}
exports.default = LightningTest;
LightningTest.description = utils_1.MessageUtil.buildDescription('LightningTestDescription', false);
LightningTest.examples = [
    '$ sfdx force:lightning:test:create -n MyLightningTest',
    '$ sfdx force:lightning:test:create -n MyLightningTest -d lightningTests'
];
LightningTest.help = utils_1.MessageUtil.buildHelpText(LightningTest.examples, false);
LightningTest.longDescription = utils_1.MessageUtil.get('LightningTestLongDescription');
LightningTest.flagsConfig = {
    testname: command_1.flags.string({
        char: 'n',
        description: utils_1.MessageUtil.get('LightningNameFlagDescription', [
            utils_1.MessageUtil.get('Test')
        ]),
        longDescription: utils_1.MessageUtil.get('LightningTestNameFlagLongDescription'),
        required: true
    }),
    template: command_1.flags.string({
        char: 't',
        description: utils_1.MessageUtil.get('TemplateFlagDescription'),
        longDescription: utils_1.MessageUtil.get('TemplateFlagLongDescription'),
        default: 'DefaultLightningTest',
        options: utils_1.CreateUtil.getCommandTemplatesForFiletype(lightningTestFileSuffix, 'lightningtest')
    }),
    outputdir: command_1.flags.string({
        char: 'd',
        description: utils_1.MessageUtil.get('OutputDirFlagDescription'),
        longDescription: utils_1.MessageUtil.get('OutputDirFlagLongDescription'),
        default: '.'
    }),
    internal: command_1.flags.boolean({
        char: 'i',
        description: utils_1.MessageUtil.get('LightningInternalFlagDescription'),
        hidden: true
    })
};
//# sourceMappingURL=create.js.map